// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String                 @id @default(auto()) @map("_id") @db.ObjectId
  authId           String                 @unique
  email            String                 @unique
  firstName        String
  lastName         String
  birthday         String
  birthplace       String
  picture          String
  personnalAddress String
  pendingToken     PendingUserToMission[]
  role             Role                   @default(SALLE)
  statut           Statut                 @default(USER)
  //mission relation many to many a faire plusieur user on la meme mission et vice verca
  missionIDs       String[]               @db.ObjectId
  missions         Missions[]             @relation(fields: [missionIDs], references: [id])
  //contract relation one to many a faire user a plusieur contrat
  workedTime       Int                    @default(0)
  createdAt        DateTime               @default(now())
  updatedAt        DateTime               @updatedAt

}

model Missions {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  creatorId   String
  missionName String
  userIDs     String[] @db.ObjectId
  users       User[]   @relation(fields: [userIDs], references: [id])
  beginAt     DateTime
  endAt       DateTime
  place       String
  duration    String
  lat         Float
  lng         Float
}

//one to many user => pendingusertomission
model PendingUserToMission {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  token       String   @unique
  user        User     @relation(fields: [userMail], references: [email])
  userMail    String
  missionId   String
  createdAt   DateTime @default(now())
  missionName String
  place       String
  beginAt     DateTime
}

//TODO one to many user => contract

enum Role {
  SALLE
  CUISINE
}

enum Statut {
  ADMIN
  MODERATEUR
  USER
}
